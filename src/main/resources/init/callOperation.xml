<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template name="callOperation" xmlns="http://ws.apache.org/ns/synapse">
    <sequence>
        <filter xpath="($ctx:uri.var.accessToken = '' or (not(string($ctx:uri.var.accessToken)))) and ($ctx:uri.var.refreshToken = '' or (not(string($ctx:uri.var.refreshToken))))">
            <then>
                <enrich>
                    <source clone="true" type="body"/>
                    <target property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                </enrich>
                <class name="org.wso2.carbon.connector.core.GenerateAccessToken"/>
                <header name="Authorization"
                        expression="fn:concat('Bearer ', $ctx:uri.var.accessToken)"
                        scope="transport"/>
                <enrich>
                    <source clone="true" property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                    <target type="body"/>
                </enrich>
                <ews.callEndpoint/>
            </then>
            <else>
                <filter source="boolean($ctx:uri.var.accessToken)" regex="true">
                    <then>
                        <header name="Authorization"
                                expression="fn:concat('Bearer ', $ctx:uri.var.accessToken)"
                                scope="transport"/>
                        <enrich>
                            <source clone="true" type="body"/>
                            <target property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                        </enrich>
                        <ews.callEndpoint/>
                        <property name="httpCode" expression="$axis2:HTTP_SC" scope="default" type="STRING"/>
                        <filter source="$ctx:httpCode" regex="4[0-9][0-9]">
                            <then>
                                <filter source="boolean($ctx:uri.var.refreshToken)" regex="true">
                                    <then>
                                        <ews.callWithRetry/>
                                    </then>
                                </filter>
                            </then>
                        </filter>
                    </then>
                    <else>
                        <filter source="boolean($ctx:uri.var.refreshToken)" regex="true">
                            <then>
                                <enrich>
                                    <source clone="true" type="body"/>
                                    <target property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                                </enrich>
                                <property name="uri.var.accessToken.reg"
                                          expression="get-property('registry', $ctx:uri.var.accessTokenRegistryPath)"/>
                                <filter source="$ctx:uri.var.accessToken.reg = ''" regex="false">
                                    <then>
                                        <header name="Authorization"
                                                expression="fn:concat('Bearer ', $ctx:uri.var.accessToken.reg)"
                                                scope="transport"/>
                                    </then>
                                </filter>
                                <ews.callEndpoint/>
                                <property name="httpCode" expression="$axis2:HTTP_SC" scope="default" type="STRING"/>
                                <filter source="$ctx:httpCode" regex="4[0-9][0-9]">
                                    <then>
                                        <ews.callWithRetry/>
                                    </then>
                                </filter>
                            </then>
                        </filter>
                    </else>
                </filter>
            </else>
        </filter>
    </sequence>
</template>
